digraph "Program Dependency Graph for 'check_account' function" {
	label="Program Dependency Graph for 'check_account' function";

	Node0x277a5b0 [shape=record,label="{\<\<ENTRY\>\> foo}"];
	Node0x277a5b0 -> Node0x277a620;
	Node0x277a5b0 -> Node0x277a690;
	Node0x277a620 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str, i32 0, i32 0))}"];
	Node0x277a690 [shape=record,label="{  ret void}"];
	Node0x277f1d0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x277f1d0 -> Node0x277f240[style=dotted,label = "{DEF_USE}" ];
	Node0x277f1d0 -> Node0x277a700[style=dotted,label = "{DEF_USE}" ];
	Node0x277f1d0 -> Node0x277f320[style=dotted,label = "{DEF_USE}" ];
	Node0x277f1d0 -> Node0x277f2f0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f240 [shape=record,label="{  store i32 1, i32* %retval}"];
	Node0x277f240 -> Node0x277f2f0[style=dotted,label = "{RAW} retval"];
	Node0x277f240 -> Node0x2784cc0[style=dotted];
	Node0x277a700 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x277a700 -> Node0x277f2f0[style=dotted,label = "{RAW} retval"];
	Node0x277a700 -> Node0x2784cc0[style=dotted];
	Node0x277f320 [shape=record,label="{  store i32 2, i32* %retval}"];
	Node0x277f320 -> Node0x277f2f0[style=dotted,label = "{RAW} retval"];
	Node0x277f320 -> Node0x2784cc0[style=dotted];
	Node0x277f2f0 [shape=record,label="{  %5 = load i32* %retval}"];
	Node0x277f2f0 -> Node0x2780030[style=dotted,label = "{DEF_USE}" ];
	Node0x277f3d0 [shape=record,label="{  %pa.addr = alloca %struct.account*, align 8}"];
	Node0x277f3d0 -> Node0x277f4d0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f3d0 -> Node0x277f540[style=dotted,label = "{DEF_USE}" ];
	Node0x277f3d0 -> Node0x277f5e0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f4d0 [shape=record,label="{  store %struct.account* %pa, %struct.account** %pa.addr, align 8}"];
	Node0x277f4d0 -> Node0x277f540[style=dotted,label = "{RAW} pa.addr"];
	Node0x277f4d0 -> Node0x277f5e0[style=dotted,label = "{RAW} pa.addr"];
	Node0x277f4d0 -> Node0x2784b90[style=dotted];
	Node0x277f540 [shape=record,label="{  %0 = load %struct.account** %pa.addr, align 8}"];
	Node0x277f540 -> Node0x277f650[style=dotted,label = "{DEF_USE}" ];
	Node0x277f5e0 [shape=record,label="{  %2 = load %struct.account** %pa.addr, align 8}"];
	Node0x277f5e0 -> Node0x277f440[style=dotted,label = "{DEF_USE}" ];
	Node0x277f650 [shape=record,label="{  %id = getelementptr inbounds %struct.account* %0, i32 0, i32 0}"];
	Node0x277f650 -> Node0x277f6c0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f6c0 [shape=record,label="{  %1 = load i32* %id, align 4}"];
	Node0x277f6c0 -> Node0x277f730[style=dotted,label = "{DEF_USE}" ];
	Node0x277f730 [shape=record,label="{  %cmp = icmp slt i32 %1, 0}"];
	Node0x277f730 -> Node0x277f7a0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f7a0 [shape=record,label="{  br i1 %cmp, label %if.then, label %if.end}"];
	Node0x277f7a0 -> Node0x277f810;
	Node0x277f7a0 -> Node0x277f240;
	Node0x277f7a0 -> Node0x277f470;
	Node0x277f7a0 -> Node0x277f5e0;
	Node0x277f7a0 -> Node0x277f440;
	Node0x277f7a0 -> Node0x277f4a0;
	Node0x277f7a0 -> Node0x277fb30;
	Node0x277f7a0 -> Node0x277fba0;
	Node0x277f7a0 -> Node0x277fc10;
	Node0x277f7a0 -> Node0x277fa60;
	Node0x277f810 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str1, i32 0, i32 0))}"];
	Node0x277f470 [shape=record,label="{  br label %return}"];
	Node0x277f440 [shape=record,label="{  %name = getelementptr inbounds %struct.account* %2, i32 0, i32 1}"];
	Node0x277f440 -> Node0x277f4a0[style=dotted,label = "{DEF_USE}" ];
	Node0x277f4a0 [shape=record,label="{  %3 = load i8** %name, align 8}"];
	Node0x277f4a0 -> Node0x277fba0[style=dotted,label = "{DEF_USE}" ];
	Node0x277fb30 [shape=record,label="{  %4 = load i8** getelementptr inbounds (%struct.account* bitcast (\{ i32, i8*, float, [4 x i8] \}* @record to %struct.account*), i32 0, i32 1), align 8}"];
	Node0x277fb30 -> Node0x277fba0[style=dotted,label = "{DEF_USE}" ];
	Node0x277fba0 [shape=record,label="{  %call1 = call i32 @strcmp(i8* %3, i8* %4) #3}"];
	Node0x277fc10 [shape=record,label="{  %cmp2 = icmp eq i32 %call1, 0}"];
	Node0x277fc10 -> Node0x277fa60[style=dotted,label = "{DEF_USE}" ];
	Node0x277fa60 [shape=record,label="{  br i1 %cmp2, label %if.then3, label %if.end5}"];
	Node0x277fa60 -> Node0x277fe10;
	Node0x277fa60 -> Node0x277a700;
	Node0x277fa60 -> Node0x277fed0;
	Node0x277fa60 -> Node0x277f320;
	Node0x277fa60 -> Node0x277fea0;
	Node0x277fe10 [shape=record,label="{  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str2, i32 0, i32 0))}"];
	Node0x277fed0 [shape=record,label="{  br label %return}"];
	Node0x277fea0 [shape=record,label="{  br label %return}"];
	Node0x2780030 [shape=record,label="{  ret i32 %5}"];
	Node0x2780030 -> Node0x277f8f0[style=dotted];
	Node0x27800c0 [shape=record,label="{\<\<ENTRY\>\> check_account}"];
	Node0x27800c0 -> Node0x277f1d0;
	Node0x27800c0 -> Node0x277f3d0;
	Node0x27800c0 -> Node0x277f4d0;
	Node0x27800c0 -> Node0x277f540;
	Node0x27800c0 -> Node0x277f650;
	Node0x27800c0 -> Node0x277f6c0;
	Node0x27800c0 -> Node0x277f730;
	Node0x27800c0 -> Node0x277f7a0;
	Node0x27800c0 -> Node0x277f2f0;
	Node0x27800c0 -> Node0x2780030;
	Node0x27800c0 -> Node0x2784980[style=dashed];
	Node0x27800c0 -> Node0x2784b90[style=dashed];
	Node0x2782b80 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x2782b80 -> Node0x2782bf0[style=dotted,label = "{DEF_USE}" ];
	Node0x2782b80 -> Node0x2782c60[style=dotted,label = "{DEF_USE}" ];
	Node0x2782bf0 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x2782bf0 -> Node0x2782c60[style=dotted,label = "{RAW} retval"];
	Node0x2782c60 [shape=record,label="{  %1 = load i32* %retval}"];
	Node0x2782c60 -> Node0x27851e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2782d00 [shape=record,label="{  %s = alloca %struct.account, align 256}"];
	Node0x2782d00 -> Node0x277f880[style=dotted,label = "{DEF_USE}" ];
	Node0x2782d00 -> Node0x277f8f0[style=dotted,label = "{DEF_USE}" ];
	Node0x2782d00 -> Node0x2782f80[style=dotted,label = "{DEF_USE}" ];
	Node0x277f880 [shape=record,label="{  %name = getelementptr inbounds %struct.account* %s, i32 0, i32 1}"];
	Node0x277f880 -> Node0x277f960[style=dotted,label = "{DEF_USE}" ];
	Node0x277f8f0 [shape=record,label="{  %call = call i32 @check_account(%struct.account* %s)}"];
	Node0x277f8f0 -> Node0x27800c0;
	Node0x277f8f0 -> Node0x2784640[style=dashed];
	Node0x277f8f0 -> Node0x2784770[style=dashed];
	Node0x277f8f0 -> Node0x2785930[style=dotted,label = "{DEF_USE}" ];
	Node0x2782f80 [shape=record,label="{  %name1 = getelementptr inbounds %struct.account* %s, i32 0, i32 1}"];
	Node0x2782f80 -> Node0x2783030[style=dotted,label = "{DEF_USE}" ];
	Node0x277f960 [shape=record,label="{  store i8* getelementptr inbounds ([4 x i8]* @.str3, i32 0, i32 0), i8** %name, align 8}"];
	Node0x277f960 -> Node0x2783030[style=dotted,label = "{RAW} name1"];
	Node0x2783030 [shape=record,label="{  %0 = load i8** %name1, align 8}"];
	Node0x2783030 -> Node0x2785150[style=dotted,label = "{DEF_USE}" ];
	Node0x2784640 [shape=record,label="{ACTUAL_IN:%struct.account*}"];
	Node0x2784640 -> Node0x2784670[style=dashed];
	Node0x2784640 -> Node0x2784700[style=dashed];
	Node0x2784640 -> Node0x27847a0[style=dashed];
	Node0x2784640 -> Node0x2784980[style=dashed];
	Node0x2784670 [shape=record,label="{1 i32}"];
	Node0x2784670 -> Node0x2784ab0[style=dashed];
	Node0x2784700 [shape=record,label="{2 i8*}"];
	Node0x2784700 -> Node0x2784b20[style=dashed];
	Node0x27847a0 [shape=record,label="{3 float}"];
	Node0x27847a0 -> Node0x2784bc0[style=dashed];
	Node0x2784770 [shape=record,label="{ACTUAL_OUT:%struct.account*}"];
	Node0x2784770 -> Node0x27848a0[style=dashed];
	Node0x2784770 -> Node0x2784910[style=dashed];
	Node0x2784770 -> Node0x27849b0[style=dashed];
	Node0x27848a0 [shape=record,label="{1 i32}"];
	Node0x27848a0 -> Node0x2782c60[style=dotted];
	Node0x2784910 [shape=record,label="{2 i8*}"];
	Node0x2784910 -> Node0x2783030[style=dotted];
	Node0x27849b0 [shape=record,label="{3 float}"];
	Node0x2784980 [shape=record,label="{FORMAL_IN:%struct.account*}"];
	Node0x2784980 -> Node0x2784ab0[style=dashed];
	Node0x2784980 -> Node0x2784b20[style=dashed];
	Node0x2784980 -> Node0x2784bc0[style=dashed];
	Node0x2784980 -> Node0x2784b90[style=dashed];
	Node0x2784980 -> Node0x277f4d0[style=dotted];
	Node0x2784ab0 [shape=record,label="{1 i32}"];
	Node0x2784ab0 -> Node0x2784cc0[style=dashed];
	Node0x2784ab0 -> Node0x277f240[style=dotted];
	Node0x2784ab0 -> Node0x277a700[style=dotted];
	Node0x2784ab0 -> Node0x277f320[style=dotted];
	Node0x2784b20 [shape=record,label="{2 i8*}"];
	Node0x2784b20 -> Node0x2784d30[style=dashed];
	Node0x2784bc0 [shape=record,label="{3 float}"];
	Node0x2784bc0 -> Node0x2784dd0[style=dashed];
	Node0x2784b90 [shape=record,label="{FORMAL_OUT:%struct.account*}"];
	Node0x2784b90 -> Node0x2784cc0[style=dashed];
	Node0x2784b90 -> Node0x2784d30[style=dashed];
	Node0x2784b90 -> Node0x2784dd0[style=dashed];
	Node0x2784b90 -> Node0x2784770[style=dashed];
	Node0x2784cc0 [shape=record,label="{1 i32}"];
	Node0x2784cc0 -> Node0x27848a0[style=dashed];
	Node0x2784d30 [shape=record,label="{2 i8*}"];
	Node0x2784d30 -> Node0x2784910[style=dashed];
	Node0x2784dd0 [shape=record,label="{3 float}"];
	Node0x2784dd0 -> Node0x27849b0[style=dashed];
	Node0x2785930 [shape=record,label="{  %tobool = icmp ne i32 %call, 0}"];
	Node0x2785930 -> Node0x27859a0[style=dotted,label = "{DEF_USE}" ];
	Node0x27859a0 [shape=record,label="{  br i1 %tobool, label %if.then, label %if.end}"];
	Node0x27859a0 -> Node0x2785a10;
	Node0x2785a10 [shape=record,label="{  br label %if.end}"];
	Node0x2785150 [shape=record,label="{  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), i8* %0)}"];
	Node0x27851e0 [shape=record,label="{  ret i32 %1}"];
	Node0x2785270 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x2785270 -> Node0x2782b80;
	Node0x2785270 -> Node0x2782d00;
	Node0x2785270 -> Node0x2782bf0;
	Node0x2785270 -> Node0x277f880;
	Node0x2785270 -> Node0x277f960;
	Node0x2785270 -> Node0x277f8f0;
	Node0x2785270 -> Node0x2785930;
	Node0x2785270 -> Node0x27859a0;
	Node0x2785270 -> Node0x2782f80;
	Node0x2785270 -> Node0x2783030;
	Node0x2785270 -> Node0x2785150;
	Node0x2785270 -> Node0x2782c60;
	Node0x2785270 -> Node0x27851e0;
}
