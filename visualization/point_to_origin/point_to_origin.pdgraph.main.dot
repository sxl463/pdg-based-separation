digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x2528420 [shape=record,label="{  %ptr.addr = alloca %struct.point*, align 8}"];
	Node0x2528420 -> Node0x2528810[style=dotted,label = "{DEF_USE}" ];
	Node0x2528420 -> Node0x2528880[style=dotted,label = "{DEF_USE}" ];
	Node0x2528420 -> Node0x2528950[style=dotted,label = "{DEF_USE}" ];
	Node0x2528810 [shape=record,label="{  store %struct.point* %ptr, %struct.point** %ptr.addr, align 8}"];
	Node0x2528810 -> Node0x2528880[style=dotted,label = "{RAW} ptr.addr"];
	Node0x2528810 -> Node0x2528950[style=dotted,label = "{RAW} ptr.addr"];
	Node0x2528810 -> Node0x252d8d0[style=dotted];
	Node0x2528880 [shape=record,label="{  %0 = load %struct.point** %ptr.addr, align 8}"];
	Node0x2528880 -> Node0x25289c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2528950 [shape=record,label="{  %1 = load %struct.point** %ptr.addr, align 8}"];
	Node0x2528950 -> Node0x2528a70[style=dotted,label = "{DEF_USE}" ];
	Node0x25289c0 [shape=record,label="{  %x = getelementptr inbounds %struct.point* %0, i32 0, i32 0}"];
	Node0x25289c0 -> Node0x25288f0[style=dotted,label = "{DEF_USE}" ];
	Node0x25288f0 [shape=record,label="{  store i32 0, i32* %x, align 4}"];
	Node0x25288f0 -> Node0x252d940[style=dotted];
	Node0x25288f0 -> Node0x252d9b0[style=dotted];
	Node0x2528a70 [shape=record,label="{  %y = getelementptr inbounds %struct.point* %1, i32 0, i32 1}"];
	Node0x2528a70 -> Node0x2528ae0[style=dotted,label = "{DEF_USE}" ];
	Node0x2528ae0 [shape=record,label="{  store i32 0, i32* %y, align 4}"];
	Node0x2528ae0 -> Node0x252d940[style=dotted];
	Node0x2528ae0 -> Node0x252d9b0[style=dotted];
	Node0x2528b70 [shape=record,label="{\<\<ENTRY\>\> to_origin}"];
	Node0x2528b70 -> Node0x2528420;
	Node0x2528b70 -> Node0x2528810;
	Node0x2528b70 -> Node0x2528880;
	Node0x2528b70 -> Node0x25289c0;
	Node0x2528b70 -> Node0x25288f0;
	Node0x2528b70 -> Node0x2528950;
	Node0x2528b70 -> Node0x2528a70;
	Node0x2528b70 -> Node0x2528ae0;
	Node0x2528b70 -> Node0x2528c90;
	Node0x2528b70 -> Node0x252d750[style=dashed];
	Node0x2528b70 -> Node0x252d8d0[style=dashed];
	Node0x2528c90 [shape=record,label="{  ret void}"];
	Node0x252b760 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x252b760 -> Node0x252b7d0[style=dotted,label = "{DEF_USE}" ];
	Node0x252b7d0 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x252b840 [shape=record,label="{  %pt1 = alloca %struct.point, align 4}"];
	Node0x252b840 -> Node0x252bdd0[style=dotted,label = "{DEF_USE}" ];
	Node0x252b840 -> Node0x252be40[style=dotted,label = "{DEF_USE}" ];
	Node0x252bdd0 [shape=record,label="{  %0 = bitcast %struct.point* %pt1 to i8*}"];
	Node0x252bdd0 -> Node0x2528c40[style=dotted,label = "{DEF_USE}" ];
	Node0x252be40 [shape=record,label="{  store %struct.point* %pt1, %struct.point** %p, align 8}"];
	Node0x252be40 -> Node0x252bf50[style=dotted,label = "{RAW} p"];
	Node0x252be40 -> Node0x2528c10[style=dotted,label = "{RAW} p"];
	Node0x252be40 -> Node0x2528be0[style=dotted,label = "{RAW} p"];
	Node0x252bee0 [shape=record,label="{  %p = alloca %struct.point*, align 8}"];
	Node0x252bee0 -> Node0x252be40[style=dotted,label = "{DEF_USE}" ];
	Node0x252bee0 -> Node0x252bf50[style=dotted,label = "{DEF_USE}" ];
	Node0x252bee0 -> Node0x2528c10[style=dotted,label = "{DEF_USE}" ];
	Node0x252bee0 -> Node0x2528be0[style=dotted,label = "{DEF_USE}" ];
	Node0x252bf50 [shape=record,label="{  %1 = load %struct.point** %p, align 8}"];
	Node0x252bf50 -> Node0x252c190[style=dotted,label = "{DEF_USE}" ];
	Node0x2528c10 [shape=record,label="{  %2 = load %struct.point** %p, align 8}"];
	Node0x2528c10 -> Node0x252dfc0[style=dotted,label = "{DEF_USE}" ];
	Node0x2528be0 [shape=record,label="{  %4 = load %struct.point** %p, align 8}"];
	Node0x2528be0 -> Node0x252e0c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2528c40 [shape=record,label="{  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%struct.point* @main.pt1 to i8*), i64 8, i32 4, i1 false)}"];
	Node0x252c190 [shape=record,label="{  call void @to_origin(%struct.point* %1)}"];
	Node0x252c190 -> Node0x2528b70;
	Node0x252c190 -> Node0x252d450[style=dashed];
	Node0x252c190 -> Node0x252d5d0[style=dashed];
	Node0x252d450 [shape=record,label="{ACTUAL_IN:%struct.point*}"];
	Node0x252d450 -> Node0x252d4c0[style=dashed];
	Node0x252d450 -> Node0x252d530[style=dashed];
	Node0x252d450 -> Node0x252d750[style=dashed];
	Node0x252d4c0 [shape=record,label="{1 i32}"];
	Node0x252d4c0 -> Node0x252d7c0[style=dashed];
	Node0x252d530 [shape=record,label="{2 i32}"];
	Node0x252d530 -> Node0x252d830[style=dashed];
	Node0x252d5d0 [shape=record,label="{ACTUAL_OUT:%struct.point*}"];
	Node0x252d5d0 -> Node0x252d640[style=dashed];
	Node0x252d5d0 -> Node0x252d6b0[style=dashed];
	Node0x252d5d0 -> Node0x252bf50[style=dotted,color=red];
	Node0x252d5d0 -> Node0x2528c10[style=dotted,color=red];
	Node0x252d5d0 -> Node0x2528be0[style=dotted,color=red];
	Node0x252d640 [shape=record,label="{1 i32}"];
	Node0x252d640 -> Node0x252d720[style=dotted,color=red];
	Node0x252d640 -> Node0x252d8a0[style=dotted,color=red];
	Node0x252d6b0 [shape=record,label="{2 i32}"];
	Node0x252d6b0 -> Node0x252d720[style=dotted,color=red];
	Node0x252d6b0 -> Node0x252d8a0[style=dotted,color=red];
	Node0x252d750 [shape=record,label="{FORMAL_IN:%struct.point*}"];
	Node0x252d750 -> Node0x252d7c0[style=dashed];
	Node0x252d750 -> Node0x252d830[style=dashed];
	Node0x252d750 -> Node0x252d8d0[style=dashed];
	Node0x252d750 -> Node0x2528810[style=dotted];
	Node0x252d7c0 [shape=record,label="{1 i32}"];
	Node0x252d7c0 -> Node0x252d940[style=dashed];
	Node0x252d7c0 -> Node0x25288f0[style=dotted];
	Node0x252d7c0 -> Node0x2528ae0[style=dotted];
	Node0x252d830 [shape=record,label="{2 i32}"];
	Node0x252d830 -> Node0x252d9b0[style=dashed];
	Node0x252d830 -> Node0x25288f0[style=dotted];
	Node0x252d830 -> Node0x2528ae0[style=dotted];
	Node0x252d8d0 [shape=record,label="{FORMAL_OUT:%struct.point*}"];
	Node0x252d8d0 -> Node0x252d940[style=dashed];
	Node0x252d8d0 -> Node0x252d9b0[style=dashed];
	Node0x252d8d0 -> Node0x252d5d0[style=dashed];
	Node0x252d940 [shape=record,label="{1 i32}"];
	Node0x252d940 -> Node0x252d640[style=dashed];
	Node0x252d9b0 [shape=record,label="{2 i32}"];
	Node0x252d9b0 -> Node0x252d6b0[style=dashed];
	Node0x252d720 [shape=record,label="{  %3 = load i32* %x, align 4}"];
	Node0x252d720 -> Node0x252e030[style=dotted,label = "{DEF_USE}" ];
	Node0x252d8a0 [shape=record,label="{  %5 = load i32* %y, align 4}"];
	Node0x252d8a0 -> Node0x252e030[style=dotted,label = "{DEF_USE}" ];
	Node0x252dfc0 [shape=record,label="{  %x = getelementptr inbounds %struct.point* %2, i32 0, i32 0}"];
	Node0x252dfc0 -> Node0x252d720[style=dotted,label = "{DEF_USE}" ];
	Node0x252e030 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str, i32 0, i32 0), i32 %3, i32 %5)}"];
	Node0x252e0c0 [shape=record,label="{  %y = getelementptr inbounds %struct.point* %4, i32 0, i32 1}"];
	Node0x252e0c0 -> Node0x252d8a0[style=dotted,label = "{DEF_USE}" ];
	Node0x252e190 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x252e190 -> Node0x252b760;
	Node0x252e190 -> Node0x252b840;
	Node0x252e190 -> Node0x252bee0;
	Node0x252e190 -> Node0x252b7d0;
	Node0x252e190 -> Node0x252bdd0;
	Node0x252e190 -> Node0x2528c40;
	Node0x252e190 -> Node0x252be40;
	Node0x252e190 -> Node0x252bf50;
	Node0x252e190 -> Node0x252c190;
	Node0x252e190 -> Node0x2528c10;
	Node0x252e190 -> Node0x252dfc0;
	Node0x252e190 -> Node0x252d720;
	Node0x252e190 -> Node0x2528be0;
	Node0x252e190 -> Node0x252e0c0;
	Node0x252e190 -> Node0x252d8a0;
	Node0x252e190 -> Node0x252e030;
	Node0x252e190 -> Node0x252e220;
	Node0x252e220 [shape=record,label="{  ret i32 0}"];
}
