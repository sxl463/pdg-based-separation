\relax 
\@writefile{toc}{\contentsline {title}{Enabling pointers in automatic program separation}{1}}
\@writefile{toc}{\authcount {1}}
\@writefile{toc}{\contentsline {author}{}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related work}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Separation Framework}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Program dependence graph}{1}}
\citation{interslicing}
\citation{ferrante}
\@writefile{toc}{\contentsline {subsubsection}{Modeling intra-procedural dependences}{2}}
\citation{dsa}
\citation{jujutsu}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces An example of two kinds of data dependences\relax }}{3}}
\@writefile{toc}{\contentsline {subsubsection}{Modeling inter-procedural dependences}{3}}
\citation{k-limit}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Example: a type-based parameter tree\relax }}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces building a parameter tree\relax }}{5}}
\@writefile{toc}{\contentsline {subsubsection}{indirect function call}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces An example of parameter trees with recursive data structure\relax }}{6}}
\@writefile{toc}{\contentsline {subsubsection}{Example: encrypt a password}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces A toy C program to encrypt a password.\relax }}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces The program dependence graph of our toy program.\relax }}{8}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:daemon}{{5}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}PDG-based separation algorithm}{9}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces PDG-based program separation\relax }}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Inter-module communication after separation}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Basic workflow}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces the automatic program separation framework\relax }}{11}}
\newlabel{fig:daemon}{{6}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}RPC framework}{12}}
\@writefile{toc}{\contentsline {subsubsection}{gRPC}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Type system and encoding/decoding rules}{13}}
\newlabel{table:nonlin}{{\caption@xref {table:nonlin}{ on input line 603}}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces type mapping rules\relax }}{13}}
\newlabel{table:nonlin}{{\caption@xref {table:nonlin}{ on input line 627}}{14}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces A name--type mapping table example\relax }}{14}}
\newlabel{table:nonlin}{{\caption@xref {table:nonlin}{ on input line 887}}{18}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Pointer values in both sender and receiver\relax }}{18}}
\bibcite{interslicing}{1}
\@writefile{toc}{\contentsline {subsubsection}{Buffer size computation}{19}}
\bibcite{objectgraph}{2}
\bibcite{k-limit}{3}
\bibcite{ferrante}{4}
\bibcite{dsa}{5}
\bibcite{jujutsu}{6}
\@writefile{toc}{\contentsline {section}{\numberline {5}Evaluation}{20}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusions}{20}}
